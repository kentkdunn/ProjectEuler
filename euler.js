//Multiples of 3 and 5-Problem 1

//If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23.

//Find the sum of all the multiples of 3 or 5 below 1000.

var EulerOne = function(num) {
  var sum = 0
    for(var x = 0; x < num; x++) {
      if(x % 3 == 0 || x % 5 == 0) {
    sum += x;
    }
  }
 console.log(sum);
 };
 EulerOne(1000);

//Even Fibonacci numbers-Problem 2

//Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

//1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

//By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.


var EulerTwo = function(num) {
  var currNumber = 1;
  var prevNumber = 1;
  var sum = 0;
  var tempSum = 0;
  while (currNumber < num) {
    if (currNumber % 2 === 0) {
      sum += currNumber;
    }
    var tempSum = currNumber + prevNumber;
    prevNumber = currNumber;
    currNumber = tempSum;
  }
  console.log(sum);
};
EulerTwo(4000000);





//Largest prime factor-Problem 3

//The prime factors of 13195 are 5, 7, 13 and 29.

//What is the largest prime factor of the number 600851475143 ?

var EulerThree = function(num) {
	var factors = [];
  var divider = 2;
  	while (num > 1) {
    	while (num % divider == 0) {
      	factors.push(divider);
        num /= divider;
      }
      divider += 1;
    }
    console.log(factors[factors.length - 1]);
}

EulerThree(600851475143);